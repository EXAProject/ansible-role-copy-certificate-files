---
- name: get file stat of local files
  stat:
    path: "{{ item.src }}"
  register: project_files_local
  with_items: "{{ project_files.files }}"
  when:
    - project_files.files | length > 0
    
- name: get file stat of local templates
  stat:
    path: "{{ item.src }}"
  register: project_templates_local
  with_items: "{{ project_files.templates }}"
  when:
    - project_files.templates | length > 0

- name: Create folder structure for files
  file:
    path: "{{ item.0.dst.path }}"
    state: directory
    mode: "{{ item.0.mode }}"
  when:
    - project_files_local | length > 0
    - item.1.stat.exists
  with_together:
    - "{{ project_files.files }}"
    - "{{ project_files_local.results }}"

- name: Create folder structure for templates
  file:
    path: "{{ item.0.dst.path }}"
    state: directory
    mode: "{{ item.0.mode }}"
  when:
    - project_templates_local | length > 0
    - item.1.stat.exists
  with_together:
    - "{{ project_files.templates }}"
    - "{{ project_templates_local.results }}"
    
- name: Ensure files are present
  copy:
    force: "{{ item.0.force }}"
    src: "{{ item.0.src }}"
    dest: "{{ item.0.dst.path }}/{{ item.0.dst.filename }}"
    mode: "{{ item.0.mode }}"
    owner: "{{ item.0.owner | default('vagrant')  }}"
    group: "{{ item.0.group | default('vagrant')  }}"
  when:
    - project_files_local | length > 0
    - item.1.stat.exists
  with_together:
    - "{{ project_files.files }}"
    - "{{ project_files_local.results }}"

- name: Ensure the templated files are present
  template:
    force: "{{ item.0.force }}"
    src: "{{ item.0.src }}"
    dest: "{{ item.0.dst.path }}/{{ item.0.dst.filename }}"
    mode: "{{ item.0.mode }}"
    owner: "{{ item.0.owner | default('vagrant') }}"
    group: "{{ item.0.group | default('vagrant')  }}"
  when:
    - project_files.templates | length > 0
    - item.1.stat.exists
  with_together:
    - "{{ project_files.templates }}"
    - "{{ project_templates_local.results }}"
    